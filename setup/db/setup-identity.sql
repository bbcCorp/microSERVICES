----------------------------------------------------------------------------
-- Name:        setup-identity.sql
-- Description: Script to setup identity database in PostgreSQL 10
--              Tables are created in 'identity' schema        
----------------------------------------------------------------------------
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

----------------------------------------------------------------------------
-- DROP DATABASE IF EXISTS microSERVICE;
-- CREATE DATABASE microSERVICE WITH TEMPLATE = template0 ENCODING = 'UTF8';

\connect microSERVICE

DROP SCHEMA identity CASCADE;

CREATE SCHEMA IF NOT EXISTS identity;



--
-- Name: AspNetUsers; Type: TABLE; Schema: identity; Owner: postgres
--

CREATE TABLE IF NOT EXISTS  "identity"."AspNetUsers" (
    "Id" text PRIMARY KEY,
    "UserName" character varying(256),
    "NormalizedUserName" character varying(256),
    "Email" character varying(256),
    "NormalizedEmail" character varying(256),
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text,
    "SecurityStamp" text,
    "ConcurrencyStamp" text,
    "PhoneNumber" text,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL
);


--
-- Name: EmailIndex; Type: INDEX; Schema: identity; Owner: postgres
--

CREATE INDEX IF NOT EXISTS "EmailIndex" ON "identity"."AspNetUsers" USING "btree" ("NormalizedEmail");


--
-- Name: UserNameIndex; Type: INDEX; Schema: identity; Owner: postgres
--

CREATE UNIQUE INDEX "UserNameIndex" ON "identity"."AspNetUsers" USING "btree" ("NormalizedUserName");


--
-- Name: AspNetRoles; Type: TABLE; Schema: identity; Owner: postgres
--

CREATE TABLE IF NOT EXISTS  "identity"."AspNetRoles" (
    "Id" text PRIMARY KEY,
    "Name" character varying(256),
    "NormalizedName" character varying(256),
    "ConcurrencyStamp" text
);


--
-- Name: RoleNameIndex; Type: INDEX; Schema: identity; Owner: postgres
--

CREATE UNIQUE INDEX "RoleNameIndex" ON "identity"."AspNetRoles" USING "btree" ("NormalizedName");



--
-- Name: AspNetRoleClaims; Type: TABLE; Schema: identity; Owner: postgres
--

CREATE TABLE IF NOT EXISTS  "identity"."AspNetRoleClaims" (
    "Id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "RoleId" text NOT NULL REFERENCES "identity"."AspNetRoles"("Id") ON DELETE CASCADE,
    "ClaimType" text,
    "ClaimValue" text
);


--
-- Name: IX_AspNetRoleClaims_RoleId; Type: INDEX; Schema: identity; Owner: postgres
--

CREATE INDEX IF NOT EXISTS "IX_AspNetRoleClaims_RoleId" ON "identity"."AspNetRoleClaims" USING "btree" ("RoleId");



--
-- Name: AspNetUserClaims; Type: TABLE; Schema: identity; Owner: postgres
--

CREATE TABLE IF NOT EXISTS  "identity"."AspNetUserClaims" (
    "Id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "UserId" text NOT NULL REFERENCES "identity"."AspNetUsers"("Id") ON DELETE CASCADE,
    "ClaimType" text,
    "ClaimValue" text
);


--
-- Name: IX_AspNetUserClaims_UserId; Type: INDEX; Schema: identity; Owner: postgres
--

CREATE INDEX IF NOT EXISTS "IX_AspNetUserClaims_UserId" ON "identity"."AspNetUserClaims" USING "btree" ("UserId");

--
-- Name: AspNetUserLogins; Type: TABLE; Schema: identity; Owner: postgres
--

CREATE TABLE IF NOT EXISTS  "identity"."AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text,
    "UserId" text NOT NULL REFERENCES "identity"."AspNetUsers"("Id") ON DELETE CASCADE,

    PRIMARY KEY ("LoginProvider", "ProviderKey")
);

--
-- Name: IX_AspNetUserLogins_UserId; Type: INDEX; Schema: identity; Owner: postgres
--

CREATE INDEX IF NOT EXISTS "IX_AspNetUserLogins_UserId" ON "identity"."AspNetUserLogins" USING "btree" ("UserId");



--
-- Name: AspNetUserRoles; Type: TABLE; Schema: identity; Owner: postgres
--

CREATE TABLE IF NOT EXISTS  "identity"."AspNetUserRoles" (
    "UserId" text NOT NULL REFERENCES "identity"."AspNetUsers"("Id") ON DELETE CASCADE,
    "RoleId" text NOT NULL REFERENCES "identity"."AspNetRoles"("Id") ON DELETE CASCADE,

    PRIMARY KEY ("UserId", "RoleId")
);

--
-- Name: IX_AspNetUserRoles_RoleId; Type: INDEX; Schema: identity; Owner: postgres
--

CREATE INDEX IF NOT EXISTS "IX_AspNetUserRoles_RoleId" ON "identity"."AspNetUserRoles" USING "btree" ("RoleId");



--
-- Name: AspNetUserTokens; Type: TABLE; Schema: identity; Owner: postgres
--

CREATE TABLE IF NOT EXISTS  "identity"."AspNetUserTokens" (
    "UserId" text NOT NULL REFERENCES "identity"."AspNetUsers"("Id") ON DELETE CASCADE,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text,

    PRIMARY KEY ("UserId", "LoginProvider", "Name")
);

